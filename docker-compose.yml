services:
    php:
        build:
            context: .
            dockerfile: /environment/dev/php/Dockerfile
        container_name: php-container
        working_dir: /var/www
        volumes:
            - ./:/var/www
        expose:
            - "8000"
        networks:
            - cn-network
        depends_on:
            - db
            - redis
    db:
        image: mysql:8.0
        container_name: mysql-container
        ports:
            - "3306:3306"
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
        volumes:
            - db-data:/var/lib/mysql
            - ./docker-compose/mysql:/docker-entrypoint-initdb.d
        networks:
            - cn-network
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin-container
        ports:
            -   "8080:80"
        environment:
            - PMA_HOST=db
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
        depends_on:
            - db
        networks:
            - cn-network
    redis:
        image: redis:alpine
        container_name: redis-container
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        ports:
            - "6379:6379"
        networks:
            - cn-network
    nginx:
        image: nginx:latest
        container_name: nginx-container
        ports:
            - "80:80"
        volumes:
            - ./environment/dev/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./:/var/www
        networks:
            - cn-network
        depends_on:
            - php
volumes:
    db-data:
networks:
    cn-network:
        driver: bridge
